


ARM Macro Assembler    Page 1 


    1 00000000                 GLOBAL           Reset_Handler
    2 00000000                 AREA             mycode,CODE,READONLY
    3 00000000         Reset_Handler                        ;this label is necc
                                                            essary
    4 00000000         
    5 00000000         
    6 00000000 00004000 
                       Bit14   EQU              0x00004000
    7 00000000 E002C000 
                       PINSEL0 EQU              0xE002C000
    8 00000000 E0028000 
                       IO0PIN  EQU              0xE0028000
    9 00000000 E0028004 
                       IO0SET  EQU              0XE0028004
   10 00000000 E0028008 
                       IO0DIR  EQU              0xE0028008
   11 00000000 E002800C 
                       IO0CLR  EQU              0XE002800C
   12 00000000        6 
                       A_var   RN               6
   13 00000000        7 
                       B_var   RN               7
   14 00000000        8 
                       C_var   RN               8
   15 00000000         
   16 00000000         Reset
   17 00000000         ;Initially Assigning A & B
   18 00000000 E3A07000        MOV              B_var,#0
   19 00000004 E3A0600A        MOV              A_var,#10
   20 00000008 E3A08000        MOV              C_var,#0
   21 0000000C         ;pin function for port 0, equate symbolic name PINSEL0 a
                       s address 0xE002C000
   22 0000000C         
   23 0000000C         ;Selecting funcion as GPIO by writing all zeros to given
                        address 
   24 0000000C E3A00000        MOV              r0,#0       ;moves #0 into regi
                                                            ster r0      
   25 00000010 E59F1108        LDR              r1,=PINSEL0 ;puts what is store
                                                            d in register 0xE00
                                                            2C000 (PINSEL0) in 
                                                            r1 register; CANNOT
                                                             PUT MOV, outputs e
                                                            rror in keil
   26 00000014 E5810000        STR              r0,[r1]     ;Selecting signal d
                                                            irection of each po
                                                            rt pin, we put '1' 
                                                            in each to bit to m
                                                            ake it an output pi
                                                            n
   27 00000018 E59F00FC        LDR              r0,LEDPINS  ;Assigning output f
                                                            or all pins except 
                                                            pin 14 (binary 1011
                                                            111100000000)
   28 0000001C E59F1100        LDR              r1,=IO0DIR  ;puts 0xE0028008 or
                                                             IO0DIR to r1 regis
                                                            ter
   29 00000020 E5810000        STR              r0,[r1]     ;copies value store
                                                            d in r0 (0x0000BF00
                                                            ) to memory address



ARM Macro Assembler    Page 2 


                                                             of r1   
   30 00000024 E3A00CFF        MOV              r0,#0x0000FF00
   31 00000028 E59F10F8        LDR              r1,=IO0CLR
   32 0000002C E5810000        STR              r0,[r1]
   33 00000030 E3A00CFF        MOV              r0,#0x0000FF00
   34 00000034 E59F10F0        LDR              r1,=IO0SET
   35 00000038 E5810000        STR              r0,[r1]
   36 0000003C         
   37 0000003C         ;Start a loop
   38 0000003C         
   39 0000003C EA000005        B                Tests       ;Infinite loop chec
                                                            king whether pin14 
                                                            is pressed
   40 00000040         
   41 00000040         task1
   42 00000040 E3570008        CMP              B_var,#8    ;B_var = 8 BEQ next
                                                             loop for task 2
   43 00000044 0A000012        BEQ              task2
   44 00000048         
   45 00000048         ;Checking pin14 status
   46 00000048 E59F00E0        LDR              r0,=IO0PIN
   47 0000004C E5909000        LDR              r9,[r0]
   48 00000050 E3190901        TST              r9,#0x00004000 ;testing if pin 
                                                            14 (binary 10000000
                                                            0000000) is a zero 
                                                            (AND operation)
   49 00000054 0A000000        BEQ              turnLow     ;(if above is zero 
                                                            -> turnLow branch
   50 00000058         
   51 00000058         Tests
   52 00000058 EAFFFFF8        B                task1
   53 0000005C         
   54 0000005C         turnLow                              ;clears next light 
                                                            if pin14 pressed
   55 0000005C E3A00C01        LDR              r0,=0x00000100 ;binary 10000000
                                                            0 (bit 8)
   56 00000060 E1A00710        LSL              r0,B_var    ;Logical shift left
                                                             of B_var
   57 00000064 E59F10BC        LDR              r1,=IO0CLR  ;forcing low
   58 00000068 E5810000        STR              r0,[r1]
   59 0000006C         
   60 0000006C E2877001        ADD              B_var,B_var,#1 ;+1 B_var
   61 00000070         
   62 00000070         ;Set Pin 14 to 1 again
   63 00000070         ;Assigns ALL PINS to Input/Output, not sure why this nee
                       ds to be done 
   64 00000070 E3A00CFF        LDR              r0,=0x0000FF00
   65 00000074 E59F10A8        LDR              r1,=IO0DIR
   66 00000078 E5810000        STR              r0,[r1]     ;Assigning all as o
                                                            utput pins 
   67 0000007C         
   68 0000007C E3570007        CMP              B_var,#7    ;;;;;;i guess if it
                                                             is at 7 which is p
                                                            in 14 you do the ex
                                                            tra case
   69 00000080 0A00001C        BEQ              Case
   70 00000084         
   71 00000084 E59F0090        LDR              r0,LEDPINS  ;setting output for
                                                             all pins but pin14



ARM Macro Assembler    Page 3 


                                                            
   72 00000088 E59F1094        LDR              r1,=IO0DIR
   73 0000008C E5810000        STR              r0,[r1]
   74 00000090         
   75 00000090 EAFFFFF0        B                Tests
   76 00000094         ;When B = 8/ all lights are on 
   77 00000094         
   78 00000094         task2                                ;Checking pin14 sta
                                                            tus for next button
                                                             press to start Fla
                                                            shlights
   79 00000094         
   80 00000094         ;Set Pin 14 to 1 again
   81 00000094         ;Assigns ALL PINS to Input/Output, not sure why this nee
                       ds to be done 
   82 00000094 E3A00CFF        LDR              r0,=0x0000FF00
   83 00000098 E59F1084        LDR              r1,=IO0DIR
   84 0000009C E5810000        STR              r0,[r1]     ;Assigning all as o
                                                            utput pins 
   85 000000A0         
   86 000000A0         check14
   87 000000A0 E59F0074        LDR              r0,LEDPINS  ;setting output for
                                                             all pins but pin14
                                                            
   88 000000A4 E59F1078        LDR              r1,=IO0DIR
   89 000000A8 E5810000        STR              r0,[r1]
   90 000000AC         
   91 000000AC E59F007C        LDR              r0,=IO0PIN
   92 000000B0 E5909000        LDR              r9,[r0]
   93 000000B4 E3190901        TST              r9,#0x00004000
   94 000000B8         
   95 000000B8         
   96 000000B8         
   97 000000B8 0A000003        BEQ              addone      ;(if above is zero 
                                                            -> turnLow branch
   98 000000BC         
   99 000000BC E59FA070        LDR              r10,=200000
  100 000000C0 E25AA001 
                       LOOP2   SUBS             r10,r10,#1
  101 000000C4 1AFFFFFD        BNE              LOOP2
  102 000000C8         
  103 000000C8 EAFFFFF4        B                check14
  104 000000CC         
  105 000000CC         addone
  106 000000CC E2877001        ADD              B_var,B_var,#1
  107 000000D0         FlashLights
  108 000000D0         
  109 000000D0 E3A00CFF        MOV              r0,#0x0000FF00 ;forcing high wi
                                                            th IO0SET to turn o
                                                            ff all LEDS
  110 000000D4 E59F1050        LDR              r1,=IO0SET
  111 000000D8 E5810000        STR              r0,[r1]
  112 000000DC         
  113 000000DC E2888001        ADD              C_var,C_var,#1
  114 000000E0 E3580005        CMP              C_var,#5
  115 000000E4 0A000000        BEQ              task2b
  116 000000E8         
  117 000000E8 EAFFFFF8        B                FlashLights
  118 000000EC         



ARM Macro Assembler    Page 4 


  119 000000EC         task2b                               ;checking if B_var=
                                                            10 then end
  120 000000EC E2877001        ADD              B_var,B_var,#1
  121 000000F0 E1570006        CMP              B_var,A_var
  122 000000F4 EA000007        B                stop
  123 000000F8         
  124 000000F8         Case
  125 000000F8 E59F0030        LDR              r0,=IO0PIN  ;puts 0xE0028000 or
                                                             IO0PIN to r0 regis
                                                            ter
  126 000000FC E5902000        LDR              r2,[r0]     ;whats stored in me
                                                            mory address of r0,
                                                             into register r2
  127 00000100 E3821901        ORR              r1,r2,#Bit14 ;r1=r2 or 0x000040
                                                            00
  128 00000104 E5801000        STR              r1,[r0]     ;r1 is stored into 
                                                            memory address of r
                                                            0
  129 00000108         
  130 00000108 E59F000C        LDR              r0,LEDPINS  ;load 0x0000BF00 in
                                                            to r0 ((binary 1011
                                                            111100000000)
  131 0000010C E59F1010        LDR              r1,=IO0DIR  ;puts 0xE0028008 or
                                                             IO0DIR to r1 regis
                                                            ter
  132 00000110 E5810000        STR              r0,[r1]     ;r0 is stored into 
                                                            memory address of r
                                                            1
  133 00000114 EAFFFFCF        B                Tests
  134 00000118         
  135 00000118         
  136 00000118         
  137 00000118         
  138 00000118 EAFFFFFE 
                       stop    B                stop
  139 0000011C 0000BF00 
                       LEDPINS DCD              0x0000BF00
  140 00000120                 END                          ; End of code
              E002C000 
              E0028008 
              E002800C 
              E0028004 
              E0028000 
              00030D40 
Command Line: --debug --xref --apcs=interwork --depend=.\lab6.d -o.\lab6.o -IC:
\Keil\ARM\RV31\INC -IC:\Keil\ARM\CMSIS\Include -IC:\Keil\ARM\Inc\Philips --pred
efine="__EVAL SETA 1" --list=.\lab6.lst lab6.s



ARM Macro Assembler    Page 1 Alphabetic symbol ordering
Relocatable symbols

Case 000000F8

Symbol: Case
   Definitions
      At line 124 in file lab6.s
   Uses
      At line 69 in file lab6.s
Comment: Case used once
FlashLights 000000D0

Symbol: FlashLights
   Definitions
      At line 107 in file lab6.s
   Uses
      At line 117 in file lab6.s
Comment: FlashLights used once
LEDPINS 0000011C

Symbol: LEDPINS
   Definitions
      At line 139 in file lab6.s
   Uses
      At line 27 in file lab6.s
      At line 71 in file lab6.s
      At line 87 in file lab6.s
      At line 130 in file lab6.s

LOOP2 000000C0

Symbol: LOOP2
   Definitions
      At line 100 in file lab6.s
   Uses
      At line 101 in file lab6.s
Comment: LOOP2 used once
Reset 00000000

Symbol: Reset
   Definitions
      At line 16 in file lab6.s
   Uses
      None
Comment: Reset unused
Reset_Handler 00000000

Symbol: Reset_Handler
   Definitions
      At line 3 in file lab6.s
   Uses
      At line 1 in file lab6.s
Comment: Reset_Handler used once
Tests 00000058

Symbol: Tests
   Definitions
      At line 51 in file lab6.s
   Uses
      At line 39 in file lab6.s
      At line 75 in file lab6.s



ARM Macro Assembler    Page 2 Alphabetic symbol ordering
Relocatable symbols

      At line 133 in file lab6.s

addone 000000CC

Symbol: addone
   Definitions
      At line 105 in file lab6.s
   Uses
      At line 97 in file lab6.s
Comment: addone used once
check14 000000A0

Symbol: check14
   Definitions
      At line 86 in file lab6.s
   Uses
      At line 103 in file lab6.s
Comment: check14 used once
mycode 00000000

Symbol: mycode
   Definitions
      At line 2 in file lab6.s
   Uses
      None
Comment: mycode unused
stop 00000118

Symbol: stop
   Definitions
      At line 138 in file lab6.s
   Uses
      At line 122 in file lab6.s
      At line 138 in file lab6.s

task1 00000040

Symbol: task1
   Definitions
      At line 41 in file lab6.s
   Uses
      At line 52 in file lab6.s
Comment: task1 used once
task2 00000094

Symbol: task2
   Definitions
      At line 78 in file lab6.s
   Uses
      At line 43 in file lab6.s
Comment: task2 used once
task2b 000000EC

Symbol: task2b
   Definitions
      At line 119 in file lab6.s
   Uses
      At line 115 in file lab6.s
Comment: task2b used once



ARM Macro Assembler    Page 3 Alphabetic symbol ordering
Relocatable symbols

turnLow 0000005C

Symbol: turnLow
   Definitions
      At line 54 in file lab6.s
   Uses
      At line 49 in file lab6.s
Comment: turnLow used once
15 symbols



ARM Macro Assembler    Page 1 Alphabetic symbol ordering
Absolute symbols

Bit14 00004000

Symbol: Bit14
   Definitions
      At line 6 in file lab6.s
   Uses
      At line 127 in file lab6.s
Comment: Bit14 used once
IO0CLR E002800C

Symbol: IO0CLR
   Definitions
      At line 11 in file lab6.s
   Uses
      At line 31 in file lab6.s
      At line 57 in file lab6.s

IO0DIR E0028008

Symbol: IO0DIR
   Definitions
      At line 10 in file lab6.s
   Uses
      At line 28 in file lab6.s
      At line 65 in file lab6.s
      At line 72 in file lab6.s
      At line 83 in file lab6.s
      At line 88 in file lab6.s
      At line 131 in file lab6.s

IO0PIN E0028000

Symbol: IO0PIN
   Definitions
      At line 8 in file lab6.s
   Uses
      At line 46 in file lab6.s
      At line 91 in file lab6.s
      At line 125 in file lab6.s

IO0SET E0028004

Symbol: IO0SET
   Definitions
      At line 9 in file lab6.s
   Uses
      At line 34 in file lab6.s
      At line 110 in file lab6.s

PINSEL0 E002C000

Symbol: PINSEL0
   Definitions
      At line 7 in file lab6.s
   Uses
      At line 25 in file lab6.s
Comment: PINSEL0 used once
6 symbols
357 symbols in table
