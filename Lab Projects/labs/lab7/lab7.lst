


ARM Macro Assembler    Page 1 


    1 00000000         
    2 00000000         
    3 00000000                 GLOBAL           user_code
    4 00000000                 AREA             mycode,CODE,READONLY
    5 00000000         user_code
    6 00000000         
    7 00000000 E0028000 
                       IO0_BASE
                               EQU              0xE0028000
    8 00000000 00000000 
                       IO0PIN  EQU              0
    9 00000000 00000008 
                       IO0DIR  EQU              0x8
   10 00000000 00000004 
                       IO0SET  EQU              0x4
   11 00000000 0000000C 
                       IO0CLR  EQU              0xC
   12 00000000         
   13 00000000 E002C000 
                       PINSEL0 EQU              0xE002C000  ;pin function for p
                                                            ort 0, equate symbo
                                                            lic name PINSEL0 as
                                                             address 0xE002C000
                                                            
   14 00000000         
   15 00000000 E3A00000        MOV              r0,#0       ;moves #0 into regi
                                                            ster r0      
   16 00000004 E59F1058        LDR              r1,=PINSEL0 ;puts what is store
                                                            d in register 0xE00
                                                            2C000 (PINSEL0) in 
                                                            r1 register; CANNOT
                                                             PUT MOV, outputs e
                                                            rror in keil
   17 00000008 E5810000        STR              r0,[r1]     ;copies value store
                                                            d in r0 to memory a
                                                            ddress specified by
                                                             r1
   18 0000000C         
   19 0000000C E3A02C0F        MOV              r2, #0x00000F00 ;moves 0x0000FF
                                                            00 (binary 11111111
                                                            00000000) into r0 r
                                                            egister. Pins 8-15 
                                                            gets declared as ou
                                                            tput 
   20 00000010 E59F3050        LDR              r3, =IO0_BASE
   21 00000014 E3A01008        LDR              r1, =IO0DIR ;puts 0xE0028008 or
                                                             IO0DIR to r1 regis
                                                            ter
   22 00000018 E7812003        STR              r2, [r1,r3] ;copies value store
                                                            d in r2 (0x0000FF00
                                                            ) to memory address
                                                             of r1
   23 0000001C         
   24 0000001C         ;Turn all the LEDS OFF
   25 0000001C         ;instead of using PINSEL0 now we are using something els
                       e
   26 0000001C         ;IO0SET  EQU  0XE0028004
   27 0000001C         
   28 0000001C         ;Set certain bits in value register IO0PIN, we select th



ARM Macro Assembler    Page 2 


                       e bit positions with a 1 value (forcing HIGH, turning th
                       em OFF)
   29 0000001C         ;MOV  r0, #0x0000FF00 ;moves 0x0000FF00 (binary 11111111
                       00000000) into r0 register. (Pins 8-15)
   30 0000001C E3A04004        LDR              r4, =IO0SET ;puts 0XE0028004 or
                                                             IO0SET to r1 regis
                                                            ter
   31 00000020 E7832004        STR              r2,[r3,r4]  ;copies value store
                                                            d in r2 to memory a
                                                            ddress of r3,r4 (AL
                                                            L LEDS OFF)
   32 00000024         
   33 00000024         ;turn them  ON using IO0CLR
   34 00000024         ;IO0CLR  EQU  0XE002800C
   35 00000024         
   36 00000024         ;Clears certain bits in value register IO0PIN, we clear 
                       the bit positions with a 1 value (forcing LOW, turning t
                       hem ON)
   37 00000024         ;MOV  r0, #0x0000FF00 ;moves 0x0000FF00 (binary 11111111
                       00000000) into r0 register. (Pins 8-15)
   38 00000024 E3A0500C        LDR              r5, =IO0CLR ;puts 0XE002800C or
                                                             IO0CLR to r1 regis
                                                            ter
   39 00000028 E7832005        STR              r2,[r3,r5]  ;copies value store
                                                            d in r2 to memory a
                                                            ddress of r3,r5 (AL
                                                            L LEDS ON)
   40 0000002C E3A0A005        MOV              r10,#5
   41 00000030         LOOP3
   42 00000030         ;LOOP begin
   43 00000030 E59F9034        LDR              r9,=2142856
   44 00000034 E2599001 
                       LOOP    SUBS             r9,r9,#1
   45 00000038 1AFFFFFD        BNE              LOOP
   46 0000003C         ;SUBS r10,r10,#1
   47 0000003C         ;turn them ON again
   48 0000003C         ;MOV  r0, #0x0000FF00 ;moves 0x0000FF00 (binary 11111111
                       00000000) into r0 register. (Pins 8-15)
   49 0000003C         ;LDR  r1, =IO0SET  ;puts 0XE0028004 or IO0SET to r1 regi
                       ster
   50 0000003C E7832005        STR              r2,[r3,r5]  ;copies value store
                                                            d in r2 to memory a
                                                            ddress of r3,r4 (AL
                                                            L LEDS OFF)
   51 00000040         
   52 00000040 E59F8024        LDR              r8,=2142856
   53 00000044 E2588001 
                       LOOP2   SUBS             r8,r8,#1
   54 00000048 1AFFFFFD        BNE              LOOP2
   55 0000004C         ;turn them OFF again
   56 0000004C         ;MOV  r0, #0x0000FF00 ;moves 0x0000FF00 (binary 11111111
                       00000000) into r0 register. (Pins 8-15)
   57 0000004C         ;LDR  r1, =IO0CLR  ;puts 0XE002800C or IO0CLR to r1 regi
                       ster
   58 0000004C E7832004        STR              r2,[r3,r4]  ;copies value store
                                                            d in r0 to memory a
                                                            ddress of r1 (ALL L
                                                            EDS ON)
   59 00000050         



ARM Macro Assembler    Page 3 


   60 00000050 E25AA001        SUBS             r10,r10,#1
   61 00000054 E35A0000        CMP              r10,#0
   62 00000058 0A000000        BEQ              stop
   63 0000005C EAFFFFF3        B                LOOP3
   64 00000060         
   65 00000060         ;Clear certain bits in value register IO0PIN, we select 
                       the bit positions with a 1 value
   66 00000060         ;MOV  r0, #0x00000003 ;moves 0x00000003 (binary 11) into
                        r0 register, so only pins 0 and 1 is  cleared.
   67 00000060         ;LDR  r1, =IO0SET  ;puts 0XE0028004 or IOSET to r1 regis
                       ter
   68 00000060         ;STR  r0, [r1]  ;copies value stored in r0 (0x00000003) 
                       to memory address of r1
   69 00000060 EAFFFFFE 
                       stop    B                stop
   70 00000064                 END                          ; End of code
              E002C000 
              E0028000 
              0020B288 
Command Line: --debug --xref --apcs=interwork --depend=.\lab7.d -o.\lab7.o -IC:
\Keil\ARM\RV31\INC -IC:\Keil\ARM\CMSIS\Include -IC:\Keil\ARM\Inc\Philips --pred
efine="__EVAL SETA 1" --list=.\lab7.lst lab7.s



ARM Macro Assembler    Page 1 Alphabetic symbol ordering
Relocatable symbols

LOOP 00000034

Symbol: LOOP
   Definitions
      At line 44 in file lab7.s
   Uses
      At line 45 in file lab7.s
Comment: LOOP used once
LOOP2 00000044

Symbol: LOOP2
   Definitions
      At line 53 in file lab7.s
   Uses
      At line 54 in file lab7.s
Comment: LOOP2 used once
LOOP3 00000030

Symbol: LOOP3
   Definitions
      At line 41 in file lab7.s
   Uses
      At line 63 in file lab7.s
Comment: LOOP3 used once
mycode 00000000

Symbol: mycode
   Definitions
      At line 4 in file lab7.s
   Uses
      None
Comment: mycode unused
stop 00000060

Symbol: stop
   Definitions
      At line 69 in file lab7.s
   Uses
      At line 62 in file lab7.s
      At line 69 in file lab7.s

user_code 00000000

Symbol: user_code
   Definitions
      At line 5 in file lab7.s
   Uses
      At line 3 in file lab7.s
Comment: user_code used once
6 symbols



ARM Macro Assembler    Page 1 Alphabetic symbol ordering
Absolute symbols

IO0CLR 0000000C

Symbol: IO0CLR
   Definitions
      At line 11 in file lab7.s
   Uses
      At line 38 in file lab7.s
Comment: IO0CLR used once
IO0DIR 00000008

Symbol: IO0DIR
   Definitions
      At line 9 in file lab7.s
   Uses
      At line 21 in file lab7.s
Comment: IO0DIR used once
IO0PIN 00000000

Symbol: IO0PIN
   Definitions
      At line 8 in file lab7.s
   Uses
      None
Comment: IO0PIN unused
IO0SET 00000004

Symbol: IO0SET
   Definitions
      At line 10 in file lab7.s
   Uses
      At line 30 in file lab7.s
Comment: IO0SET used once
IO0_BASE E0028000

Symbol: IO0_BASE
   Definitions
      At line 7 in file lab7.s
   Uses
      At line 20 in file lab7.s
Comment: IO0_BASE used once
PINSEL0 E002C000

Symbol: PINSEL0
   Definitions
      At line 13 in file lab7.s
   Uses
      At line 16 in file lab7.s
Comment: PINSEL0 used once
6 symbols
345 symbols in table
